services:
  init-llm-data:
    image: busybox
    command: chmod -R 777 /surrealdb
    volumes:
      - llm-data:/surrealdb

  init-data:
    image: busybox
    command: chmod -R 777 /surrealdb
    volumes:
      - data:/surrealdb

  llm-db:
    image: surrealdb/surrealdb:latest-dev
    container_name: llm-db
    command: start --log info --user root --pass root file:/surrealdb/llm.db
    networks:
      - llm-db-network
    volumes:
      - llm-data:/surrealdb
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "--tries=1", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    depends_on:
      init-llm-data:
        condition: service_completed_successfully

  db:
    image: surrealdb/surrealdb:latest-dev
    container_name: db
    command: start --log info --user root --pass root file:/surrealdb/surreal.db
    ports:
      - "7351:8000"
    networks:
      - db-network
    volumes:
      - data:/surrealdb
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "--tries=1", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    depends_on:
      init-data:
        condition: service_completed_successfully

  backend:
    build:
      context: ./backend
      args:
        PROFILE: dev
        BINARY: backend
    container_name: backend
    networks:
      - db-network
      - api
    environment:
      SURREALDB_URL: db:8000
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      RUST_LOG: info
      PORT: 9999
    ports:
      - "9999:9999"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    networks:
      - api

volumes:
  llm-data:
  data:

networks:
  llm-db-network:
    driver: bridge
  db-network:
    driver: bridge
  api:
    driver: bridge
